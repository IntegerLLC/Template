import{api as e}from"./index.js";function t(t,n,r){const{root:l,subscribe:o,sample:i,cleanup:s}=e;null==r&&(r=!n.$t);let f=e.h([]),u=e.add(f,""),a=new Map,p=new Map,d=new Set;function h(t,o){if(null==t)return;let i=p.get(t);return 1===o?(d.delete(t),i||(i=r?l((e=>(a.set(t,e),n(t.$v||t)))):n(t.$v||t),11===i.nodeType&&(i=(e=>{const{childNodes:t}=e,{length:n}=t;if(n<2)return t[0];let r=Array.from(t);return{nodeType:111,t:r[0],o:r[n-1],l(){if(t.length!==n){let t=0;for(;t<n;)e.appendChild(r[t++])}return e}}})(i)||i),p.set(t,i))):-1===o&&d.add(t),((t,n)=>111===t.nodeType?1/n<0?n?e.rm(t.t.parentNode,t.t.nextSibling,t.o.nextSibling)||t.t:t.o:n?t.l():t.t:t)(i,o)}function c(e){let t=a.get(e);t&&(t(),a.delete(e)),p.delete(e)}return s(o((e=>{let n=t();return i((()=>{d.clear();let t=Array.from(function(e,t,n,r,l){let o,i,s=new Map,f=new Map;for(o=0;o<t.length;o++)s.set(t[o],o);for(o=0;o<n.length;o++)f.set(n[o],o);for(o=i=0;o!==t.length||i!==n.length;){var u=t[o],a=n[i];if(null===u)o++;else if(n.length<=i)e.removeChild(r(t[o],-1)),o++;else if(t.length<=o)e.insertBefore(r(a,1),r(t[o],0)||l),i++;else if(u===a)o++,i++;else{var p=f.get(u),d=s.get(a);void 0===p?(e.removeChild(r(t[o],-1)),o++):void 0===d?(e.insertBefore(r(a,1),r(t[o],0)||l),i++):(e.insertBefore(r(t[d],1),r(t[o],0)||l),t[d]=null,d>o+1&&o++,i++)}}return n}(u.parentNode,e||[],n,h,u));return d.forEach(c),t}))}))),s((function(){a.forEach((e=>e())),a.clear(),p.clear(),d.clear()})),f}let n=new Map;function r(e){let t,r=new Map,l=[],o=0;for(let i=0,s=e.length;i<s;++i){let s=e[i];if(r.has(s))if((t=n.get(s)||[])&&t[o++])l.push(t[o]);else{let e={$v:s};t=t||[],t.push(e),n.set(s,t),l.push(e)}else l.push(s),r.set(s,1)}return l}export{t as map,r as unique};
