let e,n,t=new Set;function o(...n){e||(e=new MutationObserver(c),e.observe(document,{subtree:!0,childList:!0})),n.forEach((e=>t.add(e)))}function c(e){n=[...t].filter((e=>"string"==typeof e)),e.forEach((({removedNodes:e,addedNodes:n})=>{i("disconnected",e),i("connected",n)}))}function i(e,n){Array.from(n).forEach((n=>d(e,n)))}function d(e,o){if(1===o.nodeType)for((t.has(o)||n.some((e=>o.matches(e))))&&o.dispatchEvent(new Event(e)),o=o.firstChild;o;)d(e,o),o=o.nextSibling}function r(...n){n.length?n.forEach((e=>t.delete(e))):t.clear(),e&&!t.size&&(e.disconnect(),e=null)}export{o as observe,r as unobserve};
